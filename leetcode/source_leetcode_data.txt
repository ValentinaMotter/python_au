101. Symmetric Tree

https://leetcode.com/problems/symmetric-tree/

    def isSymmetric(self, root: TreeNode) -> bool:
        if root == None:
            return True
        def change(node):
            if node == None:
                return node
            elif node.left == None and node.right == None:
                return node
            else:
                tmp = node.right
                node.right = node.left
                node.left = tmp
                change(node.left)
                change(node.right)
        change(root.right)
        def identicalTrees(l, r):
            if l is None and r is None:
                return True
            if l is not None and r is not None:
                return ((l.val == r.val) and
                identicalTrees(l.left, r.left)and
                identicalTrees(l.right, r.right))
            return False
        return identicalTrees(root.left, root.right)